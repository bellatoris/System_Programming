                      | #######################################################################
                      | # Test for copying block of size 300;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 30f4780b0000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f5780b0000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30f02c010000 | 	irmovl $300, %eax		# src and dst have 300 elements
  0x012: a00f         | 	pushl %eax
  0x014: 30f084060000 | 	irmovl dest, %eax	# dst array
  0x01a: a00f         | 	pushl %eax
  0x01c: 30f0c4010000 | 	irmovl src, %eax	# src array
  0x022: a00f         | 	pushl %eax
  0x024: 802f000000   | 	call ncopy		 
  0x029: 80d4000000   | 	call check	        # Call checker code
  0x02e: 00           | 	halt                    # should halt with 0xaaaa in %eax
  0x02f:              | StartFun:
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | #
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x02f: a05f         | ncopy:	pushl %ebp		# Save old frame pointer
  0x031: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x033: a06f         | 	pushl %esi		# Save callee-save regs
  0x035: a03f         | 	pushl %ebx
  0x037: a07f         | 	pushl %edi
  0x039: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x03f: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
  0x045: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | 	# Loop header
  0x04b: 6300         | 	xorl %eax,%eax		# count = 0;
  0x04d: c0f2ffffffff | 	iaddl $-1, %edx		# len -= 1
  0x053: 7662000000   | 	jg Loop			# len >= 2
  0x058: 73b0000000   | 	je Last			# len = 1
  0x05d: 72c9000000   | 	jl Done			# len = 0
  0x062:              | Loop:
  0x062: 506300000000 | 	mrmovl (%ebx), %esi
  0x068: 507304000000 | 	mrmovl 4(%ebx), %edi
  0x06e: 406100000000 | 	rmmovl %esi, (%ecx)
  0x074: 407104000000 | 	rmmovl %edi, 4(%ecx)
  0x07a: 6266         | 	andl %esi, %esi		# val <= 0?
  0x07c: 7187000000   | 	jle L1			# if then, jmp
  0x081: c0f001000000 | 	iaddl $1, %eax		# count++;
  0x087:              | L1:
  0x087: 6277         | 	andl %edi, %edi		# val <= 0?
  0x089: 7194000000   | 	jle L2			# if then, jmp
  0x08e: c0f001000000 | 	iaddl $1, %eax		# count++;
  0x094:              | L2:
  0x094: c0f308000000 | 	iaddl $8, %ebx
  0x09a: c0f108000000 | 	iaddl $8, %ecx
  0x0a0: c0f2feffffff | 	iaddl $-2, %edx		
  0x0a6: 7662000000   | 	jg Loop			# len >=2
  0x0ab: 72c9000000   | 	jl Done			# len = 0
                      | #	je Last			# len = 1
  0x0b0:              | Last:
  0x0b0: 506300000000 | 	mrmovl (%ebx), %esi
  0x0b6: 406100000000 | 	rmmovl %esi, (%ecx)
  0x0bc: 6266         | 	andl %esi, %esi
  0x0be: 71c9000000   | 	jle Done
  0x0c3: c0f001000000 | 	iaddl $1, %eax
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x0c9:              | Done:
  0x0c9: b07f         | 	popl %edi               # Restore callee-save registers
  0x0cb: b03f         | 	popl %ebx
  0x0cd: b06f         | 	popl %esi
  0x0cf: 2054         | 	rrmovl %ebp, %esp
  0x0d1: b05f         | 	popl %ebp
  0x0d3: 90           | 	ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x0d4:              | End:
                      | #/* $end ncopy-ys */
  0x0d4:              | EndFun:
                      | #################################################################### 
                      | # Epilogue code for the correctness testing driver
                      | ####################################################################
                      | 
                      | # This is the correctness checking code.
                      | # It checks:
                      | #   1. %eax has 141.  Set %eax to 0xbbbb if not.
                      | #   2. The total length of the code is less than or equal to 1000.
                      | #      Set %eax to 0xcccc if not.
                      | #   3. The source data was copied to the destination.
                      | #      Set %eax to 0xdddd if not.
                      | #   4. The words just before and just after the destination region
                      | #      were not corrupted.  Set %eax to 0xeeee if not.
                      | # If all checks pass, then sets %eax to 0xaaaa
  0x0d4:              | check:
  0x0d4: a05f         | 	pushl %ebp
  0x0d6: 2045         | 	rrmovl %esp,%ebp
  0x0d8: a06f         | 	pushl %esi
  0x0da: a03f         | 	pushl %ebx
  0x0dc: a07f         | 	pushl %edi
                      | 	# Return value test
  0x0de: 30f28d000000 | 	irmovl $141,%edx
  0x0e4: 6120         | 	subl %edx,%eax
  0x0e6: 73f6000000   | 	je checkb
  0x0eb: 30f0bbbb0000 | 	irmovl $0xbbbb,%eax  # Failed test #1
  0x0f1: 70b8010000   | 	jmp cdone
  0x0f6:              | checkb:
                      | 	# Code length check
  0x0f6: 30f0d4000000 | 	irmovl EndFun,%eax
  0x0fc: 30f22f000000 | 	irmovl StartFun,%edx
  0x102: 6120         | 	subl %edx,%eax
  0x104: 30f2e8030000 | 	irmovl $1000,%edx
  0x10a: 6102         | 	subl %eax,%edx
  0x10c: 751c010000   | 	jge checkm
  0x111: 30f0cccc0000 | 	irmovl $0xcccc,%eax  # Failed test #2
  0x117: 70b8010000   | 	jmp cdone
  0x11c:              | checkm:
  0x11c: 30f284060000 | 	irmovl dest, %edx # Pointer to next destination location
  0x122: 30f3c4010000 | 	irmovl src,%ebx   # Pointer to next source location
  0x128: 30f72c010000 | 	irmovl $300,%edi  # Count
  0x12e: 6277         | 	andl %edi,%edi
  0x130: 736a010000   | 	je checkpre         # Skip check if count = 0
  0x135:              | mcloop:
  0x135: 500200000000 | 	mrmovl (%edx),%eax
  0x13b: 506300000000 | 	mrmovl (%ebx),%esi
  0x141: 6160         | 	subl %esi,%eax
  0x143: 7353010000   | 	je  mok
  0x148: 30f0dddd0000 | 	irmovl $0xdddd,%eax # Failed test #3
  0x14e: 70b8010000   | 	jmp cdone
  0x153:              | mok:
  0x153: 30f004000000 | 	irmovl $4,%eax
  0x159: 6002         | 	addl %eax,%edx	  # dest ++
  0x15b: 6003         | 	addl %eax,%ebx    # src++
  0x15d: 30f001000000 | 	irmovl $1,%eax
  0x163: 6107         | 	subl %eax,%edi    # cnt--
  0x165: 7635010000   | 	jg mcloop
  0x16a:              | checkpre:
                      | 	# Check for corruption
  0x16a: 30f280060000 | 	irmovl Predest,%edx
  0x170: 500200000000 | 	mrmovl (%edx), %eax  # Get word before destination
  0x176: 30f2fadebc00 | 	irmovl $0xbcdefa, %edx
  0x17c: 6120         | 	subl %edx,%eax
  0x17e: 738e010000   | 	je checkpost
  0x183: 30f0eeee0000 | 	irmovl $0xeeee,%eax  # Failed test #4
  0x189: 70b8010000   | 	jmp cdone
  0x18e:              | checkpost:
                      | 	# Check for corruption
  0x18e: 30f2340b0000 | 	irmovl Postdest,%edx
  0x194: 500200000000 | 	mrmovl (%edx), %eax  # Get word after destination
  0x19a: 30f2bcfade00 | 	irmovl $0xdefabc, %edx
  0x1a0: 6120         | 	subl %edx,%eax
  0x1a2: 73b2010000   | 	je checkok
  0x1a7: 30f0eeee0000 | 	irmovl $0xeeee,%eax # Failed test #4
  0x1ad: 70b8010000   | 	jmp cdone
  0x1b2:              | checkok:
                      | 	# Successful checks
  0x1b2: 30f0aaaa0000 | 	irmovl $0xaaaa,%eax
  0x1b8:              | cdone:
  0x1b8: b07f         | 	popl %edi
  0x1ba: b03f         | 	popl %ebx
  0x1bc: b06f         | 	popl %esi
  0x1be: 2054         | 	rrmovl %ebp, %esp
  0x1c0: b05f         | 	popl %ebp
  0x1c2: 90           | 	ret
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x1c4:              | 	.align 4
  0x1c4:              | src:
  0x1c4: ffffffff     | 	.long -1
  0x1c8: 02000000     | 	.long 2
  0x1cc: fdffffff     | 	.long -3
  0x1d0: 04000000     | 	.long 4
  0x1d4: fbffffff     | 	.long -5
  0x1d8: 06000000     | 	.long 6
  0x1dc: 07000000     | 	.long 7
  0x1e0: f8ffffff     | 	.long -8
  0x1e4: f7ffffff     | 	.long -9
  0x1e8: 0a000000     | 	.long 10
  0x1ec: f5ffffff     | 	.long -11
  0x1f0: f4ffffff     | 	.long -12
  0x1f4: 0d000000     | 	.long 13
  0x1f8: f2ffffff     | 	.long -14
  0x1fc: f1ffffff     | 	.long -15
  0x200: 10000000     | 	.long 16
  0x204: 11000000     | 	.long 17
  0x208: 12000000     | 	.long 18
  0x20c: 13000000     | 	.long 19
  0x210: ecffffff     | 	.long -20
  0x214: 15000000     | 	.long 21
  0x218: 16000000     | 	.long 22
  0x21c: e9ffffff     | 	.long -23
  0x220: e8ffffff     | 	.long -24
  0x224: 19000000     | 	.long 25
  0x228: e6ffffff     | 	.long -26
  0x22c: e5ffffff     | 	.long -27
  0x230: 1c000000     | 	.long 28
  0x234: 1d000000     | 	.long 29
  0x238: e2ffffff     | 	.long -30
  0x23c: e1ffffff     | 	.long -31
  0x240: e0ffffff     | 	.long -32
  0x244: 21000000     | 	.long 33
  0x248: 22000000     | 	.long 34
  0x24c: 23000000     | 	.long 35
  0x250: 24000000     | 	.long 36
  0x254: dbffffff     | 	.long -37
  0x258: 26000000     | 	.long 38
  0x25c: d9ffffff     | 	.long -39
  0x260: d8ffffff     | 	.long -40
  0x264: d7ffffff     | 	.long -41
  0x268: d6ffffff     | 	.long -42
  0x26c: d5ffffff     | 	.long -43
  0x270: d4ffffff     | 	.long -44
  0x274: 2d000000     | 	.long 45
  0x278: d2ffffff     | 	.long -46
  0x27c: d1ffffff     | 	.long -47
  0x280: d0ffffff     | 	.long -48
  0x284: cfffffff     | 	.long -49
  0x288: 32000000     | 	.long 50
  0x28c: 33000000     | 	.long 51
  0x290: 34000000     | 	.long 52
  0x294: cbffffff     | 	.long -53
  0x298: 36000000     | 	.long 54
  0x29c: 37000000     | 	.long 55
  0x2a0: 38000000     | 	.long 56
  0x2a4: 39000000     | 	.long 57
  0x2a8: 3a000000     | 	.long 58
  0x2ac: c5ffffff     | 	.long -59
  0x2b0: c4ffffff     | 	.long -60
  0x2b4: 3d000000     | 	.long 61
  0x2b8: c2ffffff     | 	.long -62
  0x2bc: c1ffffff     | 	.long -63
  0x2c0: c0ffffff     | 	.long -64
  0x2c4: bfffffff     | 	.long -65
  0x2c8: 42000000     | 	.long 66
  0x2cc: 43000000     | 	.long 67
  0x2d0: 44000000     | 	.long 68
  0x2d4: bbffffff     | 	.long -69
  0x2d8: baffffff     | 	.long -70
  0x2dc: 47000000     | 	.long 71
  0x2e0: b8ffffff     | 	.long -72
  0x2e4: b7ffffff     | 	.long -73
  0x2e8: b6ffffff     | 	.long -74
  0x2ec: 4b000000     | 	.long 75
  0x2f0: b4ffffff     | 	.long -76
  0x2f4: 4d000000     | 	.long 77
  0x2f8: 4e000000     | 	.long 78
  0x2fc: b1ffffff     | 	.long -79
  0x300: b0ffffff     | 	.long -80
  0x304: afffffff     | 	.long -81
  0x308: aeffffff     | 	.long -82
  0x30c: 53000000     | 	.long 83
  0x310: acffffff     | 	.long -84
  0x314: 55000000     | 	.long 85
  0x318: 56000000     | 	.long 86
  0x31c: a9ffffff     | 	.long -87
  0x320: 58000000     | 	.long 88
  0x324: a7ffffff     | 	.long -89
  0x328: 5a000000     | 	.long 90
  0x32c: a5ffffff     | 	.long -91
  0x330: 5c000000     | 	.long 92
  0x334: 5d000000     | 	.long 93
  0x338: 5e000000     | 	.long 94
  0x33c: a1ffffff     | 	.long -95
  0x340: a0ffffff     | 	.long -96
  0x344: 61000000     | 	.long 97
  0x348: 9effffff     | 	.long -98
  0x34c: 63000000     | 	.long 99
  0x350: 64000000     | 	.long 100
  0x354: 9bffffff     | 	.long -101
  0x358: 9affffff     | 	.long -102
  0x35c: 99ffffff     | 	.long -103
  0x360: 68000000     | 	.long 104
  0x364: 97ffffff     | 	.long -105
  0x368: 6a000000     | 	.long 106
  0x36c: 6b000000     | 	.long 107
  0x370: 6c000000     | 	.long 108
  0x374: 6d000000     | 	.long 109
  0x378: 6e000000     | 	.long 110
  0x37c: 6f000000     | 	.long 111
  0x380: 70000000     | 	.long 112
  0x384: 8fffffff     | 	.long -113
  0x388: 8effffff     | 	.long -114
  0x38c: 73000000     | 	.long 115
  0x390: 8cffffff     | 	.long -116
  0x394: 75000000     | 	.long 117
  0x398: 8affffff     | 	.long -118
  0x39c: 77000000     | 	.long 119
  0x3a0: 78000000     | 	.long 120
  0x3a4: 87ffffff     | 	.long -121
  0x3a8: 7a000000     | 	.long 122
  0x3ac: 7b000000     | 	.long 123
  0x3b0: 84ffffff     | 	.long -124
  0x3b4: 7d000000     | 	.long 125
  0x3b8: 82ffffff     | 	.long -126
  0x3bc: 81ffffff     | 	.long -127
  0x3c0: 80000000     | 	.long 128
  0x3c4: 7fffffff     | 	.long -129
  0x3c8: 7effffff     | 	.long -130
  0x3cc: 7dffffff     | 	.long -131
  0x3d0: 84000000     | 	.long 132
  0x3d4: 7bffffff     | 	.long -133
  0x3d8: 7affffff     | 	.long -134
  0x3dc: 87000000     | 	.long 135
  0x3e0: 88000000     | 	.long 136
  0x3e4: 77ffffff     | 	.long -137
  0x3e8: 76ffffff     | 	.long -138
  0x3ec: 75ffffff     | 	.long -139
  0x3f0: 8c000000     | 	.long 140
  0x3f4: 73ffffff     | 	.long -141
  0x3f8: 8e000000     | 	.long 142
  0x3fc: 8f000000     | 	.long 143
  0x400: 70ffffff     | 	.long -144
  0x404: 91000000     | 	.long 145
  0x408: 92000000     | 	.long 146
  0x40c: 6dffffff     | 	.long -147
  0x410: 6cffffff     | 	.long -148
  0x414: 6bffffff     | 	.long -149
  0x418: 96000000     | 	.long 150
  0x41c: 69ffffff     | 	.long -151
  0x420: 98000000     | 	.long 152
  0x424: 67ffffff     | 	.long -153
  0x428: 9a000000     | 	.long 154
  0x42c: 65ffffff     | 	.long -155
  0x430: 9c000000     | 	.long 156
  0x434: 9d000000     | 	.long 157
  0x438: 9e000000     | 	.long 158
  0x43c: 61ffffff     | 	.long -159
  0x440: 60ffffff     | 	.long -160
  0x444: 5fffffff     | 	.long -161
  0x448: 5effffff     | 	.long -162
  0x44c: 5dffffff     | 	.long -163
  0x450: 5cffffff     | 	.long -164
  0x454: 5bffffff     | 	.long -165
  0x458: 5affffff     | 	.long -166
  0x45c: a7000000     | 	.long 167
  0x460: 58ffffff     | 	.long -168
  0x464: 57ffffff     | 	.long -169
  0x468: aa000000     | 	.long 170
  0x46c: ab000000     | 	.long 171
  0x470: 54ffffff     | 	.long -172
  0x474: 53ffffff     | 	.long -173
  0x478: 52ffffff     | 	.long -174
  0x47c: 51ffffff     | 	.long -175
  0x480: 50ffffff     | 	.long -176
  0x484: b1000000     | 	.long 177
  0x488: b2000000     | 	.long 178
  0x48c: 4dffffff     | 	.long -179
  0x490: 4cffffff     | 	.long -180
  0x494: 4bffffff     | 	.long -181
  0x498: 4affffff     | 	.long -182
  0x49c: 49ffffff     | 	.long -183
  0x4a0: 48ffffff     | 	.long -184
  0x4a4: b9000000     | 	.long 185
  0x4a8: ba000000     | 	.long 186
  0x4ac: 45ffffff     | 	.long -187
  0x4b0: bc000000     | 	.long 188
  0x4b4: bd000000     | 	.long 189
  0x4b8: be000000     | 	.long 190
  0x4bc: 41ffffff     | 	.long -191
  0x4c0: 40ffffff     | 	.long -192
  0x4c4: c1000000     | 	.long 193
  0x4c8: 3effffff     | 	.long -194
  0x4cc: c3000000     | 	.long 195
  0x4d0: c4000000     | 	.long 196
  0x4d4: c5000000     | 	.long 197
  0x4d8: 3affffff     | 	.long -198
  0x4dc: c7000000     | 	.long 199
  0x4e0: c8000000     | 	.long 200
  0x4e4: 37ffffff     | 	.long -201
  0x4e8: 36ffffff     | 	.long -202
  0x4ec: 35ffffff     | 	.long -203
  0x4f0: 34ffffff     | 	.long -204
  0x4f4: 33ffffff     | 	.long -205
  0x4f8: ce000000     | 	.long 206
  0x4fc: cf000000     | 	.long 207
  0x500: d0000000     | 	.long 208
  0x504: d1000000     | 	.long 209
  0x508: 2effffff     | 	.long -210
  0x50c: 2dffffff     | 	.long -211
  0x510: 2cffffff     | 	.long -212
  0x514: 2bffffff     | 	.long -213
  0x518: 2affffff     | 	.long -214
  0x51c: 29ffffff     | 	.long -215
  0x520: d8000000     | 	.long 216
  0x524: 27ffffff     | 	.long -217
  0x528: da000000     | 	.long 218
  0x52c: db000000     | 	.long 219
  0x530: 24ffffff     | 	.long -220
  0x534: 23ffffff     | 	.long -221
  0x538: 22ffffff     | 	.long -222
  0x53c: df000000     | 	.long 223
  0x540: 20ffffff     | 	.long -224
  0x544: e1000000     | 	.long 225
  0x548: e2000000     | 	.long 226
  0x54c: 1dffffff     | 	.long -227
  0x550: e4000000     | 	.long 228
  0x554: e5000000     | 	.long 229
  0x558: 1affffff     | 	.long -230
  0x55c: 19ffffff     | 	.long -231
  0x560: e8000000     | 	.long 232
  0x564: 17ffffff     | 	.long -233
  0x568: ea000000     | 	.long 234
  0x56c: 15ffffff     | 	.long -235
  0x570: 14ffffff     | 	.long -236
  0x574: 13ffffff     | 	.long -237
  0x578: ee000000     | 	.long 238
  0x57c: 11ffffff     | 	.long -239
  0x580: f0000000     | 	.long 240
  0x584: f1000000     | 	.long 241
  0x588: f2000000     | 	.long 242
  0x58c: f3000000     | 	.long 243
  0x590: 0cffffff     | 	.long -244
  0x594: f5000000     | 	.long 245
  0x598: 0affffff     | 	.long -246
  0x59c: f7000000     | 	.long 247
  0x5a0: 08ffffff     | 	.long -248
  0x5a4: 07ffffff     | 	.long -249
  0x5a8: fa000000     | 	.long 250
  0x5ac: fb000000     | 	.long 251
  0x5b0: 04ffffff     | 	.long -252
  0x5b4: 03ffffff     | 	.long -253
  0x5b8: fe000000     | 	.long 254
  0x5bc: 01ffffff     | 	.long -255
  0x5c0: 00010000     | 	.long 256
  0x5c4: fffeffff     | 	.long -257
  0x5c8: 02010000     | 	.long 258
  0x5cc: fdfeffff     | 	.long -259
  0x5d0: 04010000     | 	.long 260
  0x5d4: 05010000     | 	.long 261
  0x5d8: fafeffff     | 	.long -262
  0x5dc: 07010000     | 	.long 263
  0x5e0: 08010000     | 	.long 264
  0x5e4: f7feffff     | 	.long -265
  0x5e8: 0a010000     | 	.long 266
  0x5ec: f5feffff     | 	.long -267
  0x5f0: 0c010000     | 	.long 268
  0x5f4: f3feffff     | 	.long -269
  0x5f8: f2feffff     | 	.long -270
  0x5fc: f1feffff     | 	.long -271
  0x600: f0feffff     | 	.long -272
  0x604: 11010000     | 	.long 273
  0x608: eefeffff     | 	.long -274
  0x60c: edfeffff     | 	.long -275
  0x610: 14010000     | 	.long 276
  0x614: 15010000     | 	.long 277
  0x618: 16010000     | 	.long 278
  0x61c: 17010000     | 	.long 279
  0x620: e8feffff     | 	.long -280
  0x624: 19010000     | 	.long 281
  0x628: 1a010000     | 	.long 282
  0x62c: 1b010000     | 	.long 283
  0x630: 1c010000     | 	.long 284
  0x634: 1d010000     | 	.long 285
  0x638: 1e010000     | 	.long 286
  0x63c: 1f010000     | 	.long 287
  0x640: e0feffff     | 	.long -288
  0x644: 21010000     | 	.long 289
  0x648: 22010000     | 	.long 290
  0x64c: ddfeffff     | 	.long -291
  0x650: 24010000     | 	.long 292
  0x654: dbfeffff     | 	.long -293
  0x658: dafeffff     | 	.long -294
  0x65c: d9feffff     | 	.long -295
  0x660: d8feffff     | 	.long -296
  0x664: d7feffff     | 	.long -297
  0x668: d6feffff     | 	.long -298
  0x66c: d5feffff     | 	.long -299
  0x670: d4feffff     | 	.long -300
  0x674: fadebc00     | 	.long 0xbcdefa # This shouldn't get moved
                      | 
  0x680:              | 	.align 16
  0x680:              | Predest:
  0x680: fadebc00     | 	.long 0xbcdefa
  0x684:              | dest:
  0x684: abefcd00     | 	.long 0xcdefab
  0x688: abefcd00     | 	.long 0xcdefab
  0x68c: abefcd00     | 	.long 0xcdefab
  0x690: abefcd00     | 	.long 0xcdefab
  0x694: abefcd00     | 	.long 0xcdefab
  0x698: abefcd00     | 	.long 0xcdefab
  0x69c: abefcd00     | 	.long 0xcdefab
  0x6a0: abefcd00     | 	.long 0xcdefab
  0x6a4: abefcd00     | 	.long 0xcdefab
  0x6a8: abefcd00     | 	.long 0xcdefab
  0x6ac: abefcd00     | 	.long 0xcdefab
  0x6b0: abefcd00     | 	.long 0xcdefab
  0x6b4: abefcd00     | 	.long 0xcdefab
  0x6b8: abefcd00     | 	.long 0xcdefab
  0x6bc: abefcd00     | 	.long 0xcdefab
  0x6c0: abefcd00     | 	.long 0xcdefab
  0x6c4: abefcd00     | 	.long 0xcdefab
  0x6c8: abefcd00     | 	.long 0xcdefab
  0x6cc: abefcd00     | 	.long 0xcdefab
  0x6d0: abefcd00     | 	.long 0xcdefab
  0x6d4: abefcd00     | 	.long 0xcdefab
  0x6d8: abefcd00     | 	.long 0xcdefab
  0x6dc: abefcd00     | 	.long 0xcdefab
  0x6e0: abefcd00     | 	.long 0xcdefab
  0x6e4: abefcd00     | 	.long 0xcdefab
  0x6e8: abefcd00     | 	.long 0xcdefab
  0x6ec: abefcd00     | 	.long 0xcdefab
  0x6f0: abefcd00     | 	.long 0xcdefab
  0x6f4: abefcd00     | 	.long 0xcdefab
  0x6f8: abefcd00     | 	.long 0xcdefab
  0x6fc: abefcd00     | 	.long 0xcdefab
  0x700: abefcd00     | 	.long 0xcdefab
  0x704: abefcd00     | 	.long 0xcdefab
  0x708: abefcd00     | 	.long 0xcdefab
  0x70c: abefcd00     | 	.long 0xcdefab
  0x710: abefcd00     | 	.long 0xcdefab
  0x714: abefcd00     | 	.long 0xcdefab
  0x718: abefcd00     | 	.long 0xcdefab
  0x71c: abefcd00     | 	.long 0xcdefab
  0x720: abefcd00     | 	.long 0xcdefab
  0x724: abefcd00     | 	.long 0xcdefab
  0x728: abefcd00     | 	.long 0xcdefab
  0x72c: abefcd00     | 	.long 0xcdefab
  0x730: abefcd00     | 	.long 0xcdefab
  0x734: abefcd00     | 	.long 0xcdefab
  0x738: abefcd00     | 	.long 0xcdefab
  0x73c: abefcd00     | 	.long 0xcdefab
  0x740: abefcd00     | 	.long 0xcdefab
  0x744: abefcd00     | 	.long 0xcdefab
  0x748: abefcd00     | 	.long 0xcdefab
  0x74c: abefcd00     | 	.long 0xcdefab
  0x750: abefcd00     | 	.long 0xcdefab
  0x754: abefcd00     | 	.long 0xcdefab
  0x758: abefcd00     | 	.long 0xcdefab
  0x75c: abefcd00     | 	.long 0xcdefab
  0x760: abefcd00     | 	.long 0xcdefab
  0x764: abefcd00     | 	.long 0xcdefab
  0x768: abefcd00     | 	.long 0xcdefab
  0x76c: abefcd00     | 	.long 0xcdefab
  0x770: abefcd00     | 	.long 0xcdefab
  0x774: abefcd00     | 	.long 0xcdefab
  0x778: abefcd00     | 	.long 0xcdefab
  0x77c: abefcd00     | 	.long 0xcdefab
  0x780: abefcd00     | 	.long 0xcdefab
  0x784: abefcd00     | 	.long 0xcdefab
  0x788: abefcd00     | 	.long 0xcdefab
  0x78c: abefcd00     | 	.long 0xcdefab
  0x790: abefcd00     | 	.long 0xcdefab
  0x794: abefcd00     | 	.long 0xcdefab
  0x798: abefcd00     | 	.long 0xcdefab
  0x79c: abefcd00     | 	.long 0xcdefab
  0x7a0: abefcd00     | 	.long 0xcdefab
  0x7a4: abefcd00     | 	.long 0xcdefab
  0x7a8: abefcd00     | 	.long 0xcdefab
  0x7ac: abefcd00     | 	.long 0xcdefab
  0x7b0: abefcd00     | 	.long 0xcdefab
  0x7b4: abefcd00     | 	.long 0xcdefab
  0x7b8: abefcd00     | 	.long 0xcdefab
  0x7bc: abefcd00     | 	.long 0xcdefab
  0x7c0: abefcd00     | 	.long 0xcdefab
  0x7c4: abefcd00     | 	.long 0xcdefab
  0x7c8: abefcd00     | 	.long 0xcdefab
  0x7cc: abefcd00     | 	.long 0xcdefab
  0x7d0: abefcd00     | 	.long 0xcdefab
  0x7d4: abefcd00     | 	.long 0xcdefab
  0x7d8: abefcd00     | 	.long 0xcdefab
  0x7dc: abefcd00     | 	.long 0xcdefab
  0x7e0: abefcd00     | 	.long 0xcdefab
  0x7e4: abefcd00     | 	.long 0xcdefab
  0x7e8: abefcd00     | 	.long 0xcdefab
  0x7ec: abefcd00     | 	.long 0xcdefab
  0x7f0: abefcd00     | 	.long 0xcdefab
  0x7f4: abefcd00     | 	.long 0xcdefab
  0x7f8: abefcd00     | 	.long 0xcdefab
  0x7fc: abefcd00     | 	.long 0xcdefab
  0x800: abefcd00     | 	.long 0xcdefab
  0x804: abefcd00     | 	.long 0xcdefab
  0x808: abefcd00     | 	.long 0xcdefab
  0x80c: abefcd00     | 	.long 0xcdefab
  0x810: abefcd00     | 	.long 0xcdefab
  0x814: abefcd00     | 	.long 0xcdefab
  0x818: abefcd00     | 	.long 0xcdefab
  0x81c: abefcd00     | 	.long 0xcdefab
  0x820: abefcd00     | 	.long 0xcdefab
  0x824: abefcd00     | 	.long 0xcdefab
  0x828: abefcd00     | 	.long 0xcdefab
  0x82c: abefcd00     | 	.long 0xcdefab
  0x830: abefcd00     | 	.long 0xcdefab
  0x834: abefcd00     | 	.long 0xcdefab
  0x838: abefcd00     | 	.long 0xcdefab
  0x83c: abefcd00     | 	.long 0xcdefab
  0x840: abefcd00     | 	.long 0xcdefab
  0x844: abefcd00     | 	.long 0xcdefab
  0x848: abefcd00     | 	.long 0xcdefab
  0x84c: abefcd00     | 	.long 0xcdefab
  0x850: abefcd00     | 	.long 0xcdefab
  0x854: abefcd00     | 	.long 0xcdefab
  0x858: abefcd00     | 	.long 0xcdefab
  0x85c: abefcd00     | 	.long 0xcdefab
  0x860: abefcd00     | 	.long 0xcdefab
  0x864: abefcd00     | 	.long 0xcdefab
  0x868: abefcd00     | 	.long 0xcdefab
  0x86c: abefcd00     | 	.long 0xcdefab
  0x870: abefcd00     | 	.long 0xcdefab
  0x874: abefcd00     | 	.long 0xcdefab
  0x878: abefcd00     | 	.long 0xcdefab
  0x87c: abefcd00     | 	.long 0xcdefab
  0x880: abefcd00     | 	.long 0xcdefab
  0x884: abefcd00     | 	.long 0xcdefab
  0x888: abefcd00     | 	.long 0xcdefab
  0x88c: abefcd00     | 	.long 0xcdefab
  0x890: abefcd00     | 	.long 0xcdefab
  0x894: abefcd00     | 	.long 0xcdefab
  0x898: abefcd00     | 	.long 0xcdefab
  0x89c: abefcd00     | 	.long 0xcdefab
  0x8a0: abefcd00     | 	.long 0xcdefab
  0x8a4: abefcd00     | 	.long 0xcdefab
  0x8a8: abefcd00     | 	.long 0xcdefab
  0x8ac: abefcd00     | 	.long 0xcdefab
  0x8b0: abefcd00     | 	.long 0xcdefab
  0x8b4: abefcd00     | 	.long 0xcdefab
  0x8b8: abefcd00     | 	.long 0xcdefab
  0x8bc: abefcd00     | 	.long 0xcdefab
  0x8c0: abefcd00     | 	.long 0xcdefab
  0x8c4: abefcd00     | 	.long 0xcdefab
  0x8c8: abefcd00     | 	.long 0xcdefab
  0x8cc: abefcd00     | 	.long 0xcdefab
  0x8d0: abefcd00     | 	.long 0xcdefab
  0x8d4: abefcd00     | 	.long 0xcdefab
  0x8d8: abefcd00     | 	.long 0xcdefab
  0x8dc: abefcd00     | 	.long 0xcdefab
  0x8e0: abefcd00     | 	.long 0xcdefab
  0x8e4: abefcd00     | 	.long 0xcdefab
  0x8e8: abefcd00     | 	.long 0xcdefab
  0x8ec: abefcd00     | 	.long 0xcdefab
  0x8f0: abefcd00     | 	.long 0xcdefab
  0x8f4: abefcd00     | 	.long 0xcdefab
  0x8f8: abefcd00     | 	.long 0xcdefab
  0x8fc: abefcd00     | 	.long 0xcdefab
  0x900: abefcd00     | 	.long 0xcdefab
  0x904: abefcd00     | 	.long 0xcdefab
  0x908: abefcd00     | 	.long 0xcdefab
  0x90c: abefcd00     | 	.long 0xcdefab
  0x910: abefcd00     | 	.long 0xcdefab
  0x914: abefcd00     | 	.long 0xcdefab
  0x918: abefcd00     | 	.long 0xcdefab
  0x91c: abefcd00     | 	.long 0xcdefab
  0x920: abefcd00     | 	.long 0xcdefab
  0x924: abefcd00     | 	.long 0xcdefab
  0x928: abefcd00     | 	.long 0xcdefab
  0x92c: abefcd00     | 	.long 0xcdefab
  0x930: abefcd00     | 	.long 0xcdefab
  0x934: abefcd00     | 	.long 0xcdefab
  0x938: abefcd00     | 	.long 0xcdefab
  0x93c: abefcd00     | 	.long 0xcdefab
  0x940: abefcd00     | 	.long 0xcdefab
  0x944: abefcd00     | 	.long 0xcdefab
  0x948: abefcd00     | 	.long 0xcdefab
  0x94c: abefcd00     | 	.long 0xcdefab
  0x950: abefcd00     | 	.long 0xcdefab
  0x954: abefcd00     | 	.long 0xcdefab
  0x958: abefcd00     | 	.long 0xcdefab
  0x95c: abefcd00     | 	.long 0xcdefab
  0x960: abefcd00     | 	.long 0xcdefab
  0x964: abefcd00     | 	.long 0xcdefab
  0x968: abefcd00     | 	.long 0xcdefab
  0x96c: abefcd00     | 	.long 0xcdefab
  0x970: abefcd00     | 	.long 0xcdefab
  0x974: abefcd00     | 	.long 0xcdefab
  0x978: abefcd00     | 	.long 0xcdefab
  0x97c: abefcd00     | 	.long 0xcdefab
  0x980: abefcd00     | 	.long 0xcdefab
  0x984: abefcd00     | 	.long 0xcdefab
  0x988: abefcd00     | 	.long 0xcdefab
  0x98c: abefcd00     | 	.long 0xcdefab
  0x990: abefcd00     | 	.long 0xcdefab
  0x994: abefcd00     | 	.long 0xcdefab
  0x998: abefcd00     | 	.long 0xcdefab
  0x99c: abefcd00     | 	.long 0xcdefab
  0x9a0: abefcd00     | 	.long 0xcdefab
  0x9a4: abefcd00     | 	.long 0xcdefab
  0x9a8: abefcd00     | 	.long 0xcdefab
  0x9ac: abefcd00     | 	.long 0xcdefab
  0x9b0: abefcd00     | 	.long 0xcdefab
  0x9b4: abefcd00     | 	.long 0xcdefab
  0x9b8: abefcd00     | 	.long 0xcdefab
  0x9bc: abefcd00     | 	.long 0xcdefab
  0x9c0: abefcd00     | 	.long 0xcdefab
  0x9c4: abefcd00     | 	.long 0xcdefab
  0x9c8: abefcd00     | 	.long 0xcdefab
  0x9cc: abefcd00     | 	.long 0xcdefab
  0x9d0: abefcd00     | 	.long 0xcdefab
  0x9d4: abefcd00     | 	.long 0xcdefab
  0x9d8: abefcd00     | 	.long 0xcdefab
  0x9dc: abefcd00     | 	.long 0xcdefab
  0x9e0: abefcd00     | 	.long 0xcdefab
  0x9e4: abefcd00     | 	.long 0xcdefab
  0x9e8: abefcd00     | 	.long 0xcdefab
  0x9ec: abefcd00     | 	.long 0xcdefab
  0x9f0: abefcd00     | 	.long 0xcdefab
  0x9f4: abefcd00     | 	.long 0xcdefab
  0x9f8: abefcd00     | 	.long 0xcdefab
  0x9fc: abefcd00     | 	.long 0xcdefab
  0xa00: abefcd00     | 	.long 0xcdefab
  0xa04: abefcd00     | 	.long 0xcdefab
  0xa08: abefcd00     | 	.long 0xcdefab
  0xa0c: abefcd00     | 	.long 0xcdefab
  0xa10: abefcd00     | 	.long 0xcdefab
  0xa14: abefcd00     | 	.long 0xcdefab
  0xa18: abefcd00     | 	.long 0xcdefab
  0xa1c: abefcd00     | 	.long 0xcdefab
  0xa20: abefcd00     | 	.long 0xcdefab
  0xa24: abefcd00     | 	.long 0xcdefab
  0xa28: abefcd00     | 	.long 0xcdefab
  0xa2c: abefcd00     | 	.long 0xcdefab
  0xa30: abefcd00     | 	.long 0xcdefab
  0xa34: abefcd00     | 	.long 0xcdefab
  0xa38: abefcd00     | 	.long 0xcdefab
  0xa3c: abefcd00     | 	.long 0xcdefab
  0xa40: abefcd00     | 	.long 0xcdefab
  0xa44: abefcd00     | 	.long 0xcdefab
  0xa48: abefcd00     | 	.long 0xcdefab
  0xa4c: abefcd00     | 	.long 0xcdefab
  0xa50: abefcd00     | 	.long 0xcdefab
  0xa54: abefcd00     | 	.long 0xcdefab
  0xa58: abefcd00     | 	.long 0xcdefab
  0xa5c: abefcd00     | 	.long 0xcdefab
  0xa60: abefcd00     | 	.long 0xcdefab
  0xa64: abefcd00     | 	.long 0xcdefab
  0xa68: abefcd00     | 	.long 0xcdefab
  0xa6c: abefcd00     | 	.long 0xcdefab
  0xa70: abefcd00     | 	.long 0xcdefab
  0xa74: abefcd00     | 	.long 0xcdefab
  0xa78: abefcd00     | 	.long 0xcdefab
  0xa7c: abefcd00     | 	.long 0xcdefab
  0xa80: abefcd00     | 	.long 0xcdefab
  0xa84: abefcd00     | 	.long 0xcdefab
  0xa88: abefcd00     | 	.long 0xcdefab
  0xa8c: abefcd00     | 	.long 0xcdefab
  0xa90: abefcd00     | 	.long 0xcdefab
  0xa94: abefcd00     | 	.long 0xcdefab
  0xa98: abefcd00     | 	.long 0xcdefab
  0xa9c: abefcd00     | 	.long 0xcdefab
  0xaa0: abefcd00     | 	.long 0xcdefab
  0xaa4: abefcd00     | 	.long 0xcdefab
  0xaa8: abefcd00     | 	.long 0xcdefab
  0xaac: abefcd00     | 	.long 0xcdefab
  0xab0: abefcd00     | 	.long 0xcdefab
  0xab4: abefcd00     | 	.long 0xcdefab
  0xab8: abefcd00     | 	.long 0xcdefab
  0xabc: abefcd00     | 	.long 0xcdefab
  0xac0: abefcd00     | 	.long 0xcdefab
  0xac4: abefcd00     | 	.long 0xcdefab
  0xac8: abefcd00     | 	.long 0xcdefab
  0xacc: abefcd00     | 	.long 0xcdefab
  0xad0: abefcd00     | 	.long 0xcdefab
  0xad4: abefcd00     | 	.long 0xcdefab
  0xad8: abefcd00     | 	.long 0xcdefab
  0xadc: abefcd00     | 	.long 0xcdefab
  0xae0: abefcd00     | 	.long 0xcdefab
  0xae4: abefcd00     | 	.long 0xcdefab
  0xae8: abefcd00     | 	.long 0xcdefab
  0xaec: abefcd00     | 	.long 0xcdefab
  0xaf0: abefcd00     | 	.long 0xcdefab
  0xaf4: abefcd00     | 	.long 0xcdefab
  0xaf8: abefcd00     | 	.long 0xcdefab
  0xafc: abefcd00     | 	.long 0xcdefab
  0xb00: abefcd00     | 	.long 0xcdefab
  0xb04: abefcd00     | 	.long 0xcdefab
  0xb08: abefcd00     | 	.long 0xcdefab
  0xb0c: abefcd00     | 	.long 0xcdefab
  0xb10: abefcd00     | 	.long 0xcdefab
  0xb14: abefcd00     | 	.long 0xcdefab
  0xb18: abefcd00     | 	.long 0xcdefab
  0xb1c: abefcd00     | 	.long 0xcdefab
  0xb20: abefcd00     | 	.long 0xcdefab
  0xb24: abefcd00     | 	.long 0xcdefab
  0xb28: abefcd00     | 	.long 0xcdefab
  0xb2c: abefcd00     | 	.long 0xcdefab
  0xb30: abefcd00     | 	.long 0xcdefab
  0xb34:              | Postdest:
  0xb34: bcfade00     | 	.long 0xdefabc
                      | 
  0xb38:              | .align 4
                      | # Run time stack
  0xb38: 00000000     | 	.long 0
  0xb3c: 00000000     | 	.long 0
  0xb40: 00000000     | 	.long 0
  0xb44: 00000000     | 	.long 0
  0xb48: 00000000     | 	.long 0
  0xb4c: 00000000     | 	.long 0
  0xb50: 00000000     | 	.long 0
  0xb54: 00000000     | 	.long 0
  0xb58: 00000000     | 	.long 0
  0xb5c: 00000000     | 	.long 0
  0xb60: 00000000     | 	.long 0
  0xb64: 00000000     | 	.long 0
  0xb68: 00000000     | 	.long 0
  0xb6c: 00000000     | 	.long 0
  0xb70: 00000000     | 	.long 0
  0xb74: 00000000     | 	.long 0
                      | 
  0xb78:              | Stack:
