                      | #######################################################################
                      | # Test for copying block of size 4;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 30f448010000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 30f548010000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30f004000000 | 	irmovl $4, %eax		# src and dst have 4 elements
  0x012: a00f         | 	pushl %eax
  0x014: 30f0f4000000 | 	irmovl dest, %eax	# dst array
  0x01a: a00f         | 	pushl %eax
  0x01c: 30f0d0000000 | 	irmovl src, %eax	# src array
  0x022: a00f         | 	pushl %eax
  0x024: 802a000000   | 	call ncopy		 
  0x029: 00           | 	halt			# should halt with num nonzeros in %eax
  0x02a:              | StartFun:
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | #
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x02a: a05f         | ncopy:	pushl %ebp		# Save old frame pointer
  0x02c: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x02e: a06f         | 	pushl %esi		# Save callee-save regs
  0x030: a03f         | 	pushl %ebx
  0x032: a07f         | 	pushl %edi
  0x034: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x03a: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
  0x040: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | 	# Loop header
  0x046: 6300         | 	xorl %eax,%eax		# count = 0;
  0x048: c0f2ffffffff | 	iaddl $-1, %edx		# len -= 1
  0x04e: 765d000000   | 	jg Loop			# len >= 2
  0x053: 73ab000000   | 	je Last			# len = 1
  0x058: 72c4000000   | 	jl Done			# len = 0
  0x05d:              | Loop:
  0x05d: 506300000000 | 	mrmovl (%ebx), %esi
  0x063: 507304000000 | 	mrmovl 4(%ebx), %edi
  0x069: 406100000000 | 	rmmovl %esi, (%ecx)
  0x06f: 407104000000 | 	rmmovl %edi, 4(%ecx)
  0x075: 6266         | 	andl %esi, %esi		# val <= 0?
  0x077: 7182000000   | 	jle L1			# if then, jmp
  0x07c: c0f001000000 | 	iaddl $1, %eax		# count++;
  0x082:              | L1:
  0x082: 6277         | 	andl %edi, %edi		# val <= 0?
  0x084: 718f000000   | 	jle L2			# if then, jmp
  0x089: c0f001000000 | 	iaddl $1, %eax		# count++;
  0x08f:              | L2:
  0x08f: c0f308000000 | 	iaddl $8, %ebx
  0x095: c0f108000000 | 	iaddl $8, %ecx
  0x09b: c0f2feffffff | 	iaddl $-2, %edx		
  0x0a1: 765d000000   | 	jg Loop			# len >=2
  0x0a6: 72c4000000   | 	jl Done			# len = 0
                      | #	je Last			# len = 1
  0x0ab:              | Last:
  0x0ab: 506300000000 | 	mrmovl (%ebx), %esi
  0x0b1: 406100000000 | 	rmmovl %esi, (%ecx)
  0x0b7: 6266         | 	andl %esi, %esi
  0x0b9: 71c4000000   | 	jle Done
  0x0be: c0f001000000 | 	iaddl $1, %eax
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x0c4:              | Done:
  0x0c4: b07f         | 	popl %edi               # Restore callee-save registers
  0x0c6: b03f         | 	popl %ebx
  0x0c8: b06f         | 	popl %esi
  0x0ca: 2054         | 	rrmovl %ebp, %esp
  0x0cc: b05f         | 	popl %ebp
  0x0ce: 90           | 	ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x0cf:              | End:
                      | #/* $end ncopy-ys */
  0x0cf:              | EndFun:
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x0d0:              | 	.align 4
  0x0d0:              | src:
  0x0d0: 01000000     | 	.long 1
  0x0d4: feffffff     | 	.long -2
  0x0d8: fdffffff     | 	.long -3
  0x0dc: 04000000     | 	.long 4
  0x0e0: fadebc00     | 	.long 0xbcdefa # This shouldn't get moved
                      | 
  0x0f0:              | 	.align 16
  0x0f0:              | Predest:
  0x0f0: fadebc00     | 	.long 0xbcdefa
  0x0f4:              | dest:
  0x0f4: abefcd00     | 	.long 0xcdefab
  0x0f8: abefcd00     | 	.long 0xcdefab
  0x0fc: abefcd00     | 	.long 0xcdefab
  0x100: abefcd00     | 	.long 0xcdefab
  0x104:              | Postdest:
  0x104: bcfade00     | 	.long 0xdefabc
                      | 
  0x108:              | .align 4
                      | # Run time stack
  0x108: 00000000     | 	.long 0
  0x10c: 00000000     | 	.long 0
  0x110: 00000000     | 	.long 0
  0x114: 00000000     | 	.long 0
  0x118: 00000000     | 	.long 0
  0x11c: 00000000     | 	.long 0
  0x120: 00000000     | 	.long 0
  0x124: 00000000     | 	.long 0
  0x128: 00000000     | 	.long 0
  0x12c: 00000000     | 	.long 0
  0x130: 00000000     | 	.long 0
  0x134: 00000000     | 	.long 0
  0x138: 00000000     | 	.long 0
  0x13c: 00000000     | 	.long 0
  0x140: 00000000     | 	.long 0
  0x144: 00000000     | 	.long 0
                      | 
  0x148:              | Stack:
